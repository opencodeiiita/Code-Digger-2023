Special Palindrome Number:
* For entire problem we assume s[1->i] means substring "s1s2s3....si" *

Problem Statement:

You are given a string 's' of lower english alphabets of length n.
Output the maximum value of the product of 2 numbers x & y such that
x = length of the substring that is prefix of the given string and also a palindrome.
y = no of occurence of the selected substring in the original string.


Input:

you are given a integer 't' denoting no. of test case.
next line contains a integer n equal to length of the string given,
next line contains a string of lowercase alphabets of length n.

Output:

Output a single integer that is the maximum value of the product of above described x and y.


Constraints:

1<= t <=1000(1e3).
1<= n <=1000(1e3).
(Note that sum of n over all test case does not exceed 2000(2*1e3).)

Sample testcase:

Consider a string s as "rarararar" so n=9;
let us use 1 based index,
s[1->1]="r" is a palindrome and it occurs 5 times. so product is 1*5=5;
s[1->2]="ra" is not palindrome.
s[1->3]="rar" is a palindrome and it occurs 4 times. so product is 3*4=12;
s[1->4]="rara" is not palindrome.
s[1->5]="rarar" is a palindrome and it occurs 3 times. so product is 5*3=15;
s[1->6]="rarara" is not palindrome.
s[1->7]="rararar" is a palindrome and it occurs 2 times. so product is 7*2=14;
s[1->8]="rararara" is not palindrome.
s[1->9]="rarararar" is a palindrome and it occurs 1 times. so product is 9*1=9;

so the output should be 15.

